я сейчас буду делать фласк приложение для всего этого.
Хочу добавить такой функционал, что бы была возсожность из главной функции передовать за какой период делать анализ статей.
где это добавить что бы потом было удобней это выбирать

да я хочу получать из формы это число.
Вот будет у меня фласк приложение. Весь функционал будет в разных же файлах. А не в главном файле main
У меня есть файл analize_articles.py
еше будет файл который взаимодействует с chat gpt api я назвал его gpt_magic.py


вот это мне и надо
напиши в какой модуль какие функции надо добавить


сейчас мое приложение выглдядит так
tv_news_flask
    -venv
    analize_articles.py
    gpt_magic.py
    main.py

куда и как и что писать в этом env
куда и как и что писать в этом .gitignore


теперь мне надо....
1. переделай его для fast api
2. напиши структуру всего веб приложения, что бы я знал куда засунуть html, css, js
3. напиши мне html для этого приложения (если надо то с классами, так как мы же будем использовать стили и тд)
4. напиши css стили. я хочу прикольный красивый дизайн. удиви меня. Но пусть будет возможность, поменять стили если мне не понравится
5. незнаю нужен ли js или нет. если да, то тоже напиши его
6. перед тем как писать какой то файл, напиши как он называется.
7. если что я не знаю как файлы html, py, css, js должны взаимодействовать между собой в фаст апи приложении, так что
объясни этот момент
8. в общем как лучше сделать страницу? у нас парсинг, если ты помнишь идет автоматически, так что я думаю, надо сделать
какую то форму. в которой можно выбрать количество дней(давай пока поставим до 10)
это будет то количество дней за которое нужно подготовить наш дайджест и кнопку красивую с надписью make it или do it для
того что бы делался дайджест, после этого я хочу что бы была какая то времменя надпись на английском, типа "подождите, дайджест готовится"
потом когда дайджест готов(а он у нас вроде в виде словаря где ключ articles group и номер, а значение сгенерированный текст)
ну вот когда дайджест готов, нужно что бы он отобразился красиво на странице, можно в виде раскрывающегося списка(видно каждую первую строчку
каждого текста, и при нажатии на первую строчку каждого текста, открывается полный текст.)
как думаешь этот 8 пункт можно реализвать.
Имей ввиду, что заказчик захотел еще кое что добвать, так что в будущем, нам придется кое что добавить на эту старницу


ок вот здесь http://127.0.0.1:8000/docs я могу все посмотреть и попробовать...
НО я то хочу дать заказчику удобно пользоваться.
Так что надо все доделать нам. Я же писал
нам нужен удобный и понятный интерфейс старницы
со стилями и тд. на этой странице http://127.0.0.1:8000/ есть форма куда можно ввести кол во дней, но там в принт ничего не выводится
на этой странице http://127.0.0.1:8000/generate, пищется {"detail":"Method Not Allowed"}
и когда функция работала на странице http://127.0.0.1:8000/docs, страница http://127.0.0.1:8000/ была не доступна

так, я выбрал два дня, нажал generate кнопку в консоли paycham все это произошло
Starting to generate summaries...
2
Summary generated for Articles group 1: based on the article: https://variety.com/2023/film/news/chris-keyser-wga-video-message-1235631533/
Summary generated for Articles group 2: based on the article: https://deadline.com/2023/06/tom-holland-reveals-his-favorite-spider-man-movie-to-the-world-1235399543/
Summary generated for Articles group 3: based on the article: https://deadline.com/2023/06/padma-lakshmi-exiting-top-chef-after-17-years-1235399030/
Summary generated for Articles group 4: based on the article: https://variety.com/2023/film/news/disney-1-5-billion-content-write-off-charge-streaming-1235631877/
Summary generated for Articles group 5: based on the article: https://www.hollywoodreporter.com/movies/movie-news/barbie-production-pink-paint-international-shortage-1235506713/

но где черт возьми результат на страние с формой? http://127.0.0.1:8000/

в инструментах разработчика, во вкладке network после того как тексты сгенерируются, они появляются во вкладке response
в формате словаря или json в виде {"summaries":{"Articles group (номер):": "текст"}
но на нашей странице этого нет.
давай сначала.
мне нужен файл index.html на котором есть форма, для отправки количества дней, за которые нужно смотреть бд, для поиска этих
 статей для генерации
нужен файл css для стилей
js что бы все обрабатывалось.

В html я хочу так
мы вводим количество дней, нажимаем generate и когда возвращается словарь со статьями, отображаем на этой же странице
в красиво виде, напиши какие нибудь стиле то, ну что бы было не просто все на белом фоне без границ, а какой нибудь
небольшой дизайн. Представь что ты мой напарник, и очень хорошо знаешь фронт енд

короче смотри и помоги сейчас в принт в пайчарм все выводит, но мне надо, что бы все выводило на старнице с формой,
когда будет готово
вот мой index.html
<!DOCTYPE html>
<html>
<head>
    <title>News Summary</title>
    <link rel="stylesheet" href="/static/css/style.css">
</head>
<body>
    <div id="content">
        <form id="generate-form">
            <label for="days">Number of days:</label>
            <input type="number" id="days" name="days" min="1" max="7">
            <input type="submit" value="Generate">
        </form>
        <div id="results">
            <!-- Summaries will be inserted here -->
        </div>
    </div>
    <script src="/static/js/script.js"></script>
</body>
</html>
вот мой style.css
body {
    font-family: Arial, sans-serif;
}

#content {
    margin: auto;
    width: 50%;
    padding: 10px;
}

#generate-form {
    margin-bottom: 20px;
}
вот мой script.js
document.getElementById('generate-form').addEventListener('submit', function(event) {
    event.preventDefault();  // Prevent the form from being submitted normally

    var days = document.getElementById('days').value;

    fetch('/generate', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `days=${encodeURIComponent(days)}`,
    })
    .then(response => response.json())
    .then(data => {
        var resultsDiv = document.getElementById('results');
        resultsDiv.innerHTML = '';  // Clear previous results

        for (let summary of data.summaries) {
            var p = document.createElement('p');
            p.textContent = summary;
            resultsDiv.appendChild(p);
        }
    });
});
 почему не выводится результат(сгенерированные статьи)?
 И добавь стилей, шрифт в форме был чуть больше, и по центру экрана


в общем, пользователь будет выбирать количество дней(за которые будет браться инфа из БД) и нажимать кнопку, например
generate.
после этого на бек отправляется это число(кол во дней) и уже запускаеются функции питона, для поиска всей инфы и генерации текста
и затем отправления этого словаря(json) с информацией на страницу..
И нужно все красиво показать на странице
Сейчас мой main.py так выглядит.
from fastapi import FastAPI, Request, Form
from fastapi.responses import HTMLResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from typing import Optional
import os
from urllib.parse import quote
from analize_articles import get_article_groups
from gpt_magic import generate_summary
import datetime
import json
from dotenv import load_dotenv
from fastapi.middleware.cors import CORSMiddleware


app = FastAPI()
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # Allows all origins
    allow_credentials=True,
    allow_methods=["*"],  # Allows all methods
    allow_headers=["*"],  # Allows all headers
)
app.mount("/static", StaticFiles(directory="static"), name="static")

templates = Jinja2Templates(directory="templates")

load_dotenv()
openai_api_key = os.getenv('OPENAI_API_KEY')
db_host = os.getenv('DB_HOST')
db_user = os.getenv('DB_USER')
db_password = os.getenv('DB_PASSWORD')
encoded_password = quote(db_password, safe='')
db_name = os.getenv('DB_NAME')

table_names = ['deadline_film', 'deadline_tv', 'hollywoodreporter_movies_news',
               'hollywoodreporter_tv_news', 'indiwire_film', 'indiwire_tv',
               'variety_film_news', 'variety_tv_news']

@app.get("/", response_class=HTMLResponse)
async def read_item(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})

@app.post("/generate")
async def generate(days: int = Form(...)):
    print("Starting to generate summaries...")
    print(days)
    article_groups = get_article_groups(days_ago=days, host=db_host,user=db_user, password=encoded_password, database=db_name, table_names=table_names)
    summaries = generate_summary(article_groups=article_groups, api_key=openai_api_key)
    return {"summaries": summaries}

Значит, напиши файлы html, css, js под мои запросы, и измени main.py если надо.
все понятно?